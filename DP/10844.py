# 짧게 보면은 그냥 내 양옆을 확인하는거임!
import sys
input = sys.stdin.readline
n = int(input())

for i in range(n):
    


# def stairs(n):
#     n_str = str(n)
#     for i in range(len(n_str)-1):
#         if (int(n_str[i])+1) == int(n_str[i+1]) or (int((n_str[i]))-1) == int(n_str[i+1]):
#             pass
#         else:
#             return False
#     print(n)
#     return True

# anw = 1

# for i in range(10**(n-1)+1,10**n):
#     if stairs(i):
#         anw += 1

# print(anw%1000000000)



# 자릿수가 2인경우 계단수는 십의자리가 정해진 경우 2개일수 밖에 없음
# ex) 십의 자릿수가 3인 경우, 32 34 이거밖에 없다

# 일의 자릿수만 고려했을 때는 그냥 다 계단수
# 십의 자릿수만 고려할 경우 십의자리수가 정해지면 2개씩밖에 안됨
# 1-9(8개) -> 10 12, 21,23, 32,34, 43,45, 54,56, 65,67, 76,78, 87,89, 98 
# 9를 제외하고 *2를 한다는 것!
# 백의 자릿수를 고려해본다면?
# 10~, 12~ 이때도 십의자릿수가 정해진다면 고려해야하는게 2개가 정해짐
# 9를 제외하고!
# 확통으로 계산한다면?
# 1. 첫번째 자릿수가 정해지는 경우 + 1~8인 경우-> 경우의 수가 8개 * 2
# 2. 첫번째 자릿수가 정해지는 경우 + 9인 경우 -> 그 다음께 8로 고정이 된다는 것
# 3. n부터 시작하는 for문

# 4. 경우의 수는 결국 첫번째 자릿수에 의해 정해진다!
# 5. 8 -> *2 근데 거기서도 9가 생기잖아.