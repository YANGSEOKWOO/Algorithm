# 사고과정, 접근법 기록
'''
그냥 특정 수를 2진수로 쪼개는 방법인 것 같은데...
ex) 6 => 4 + 2 + 0 니까 2번
    9 => 8 + 0 + 0 + 1 총 4번
    11 => 8 + 0 + 2 + 1
    10 => 8 + 0 + 2 3번
왜냐면 막대는 무조건 D/2인 2조각을 쪼개지기 때문에

1. 특정 수랑 가장 가까운 2의 배수를 찾는다.
2. 특정 수를 2진수로 바꾸어 길이를 찾는다.
'''
n = int(input())
bins = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 
        8192, 16384, 32768, 65536, 131072, 262144, 524288]
if n in bins:
    print(n, 0)
else:
    bin_list = list(bin(n))
    bin_list = bin_list[2:]
    # print(bin_list)
    bin_num = len(bin_list)
    num = bin_num
    # ['1', '1', '0']이잖아, 근데 이러면 마지막 0은 제외해야한다고
    # ['1', '0', '1']이면, 0은 상관없어, ['1', '0', '0']이면 마지막 00은 제외한 길이를 측정해야해.
    for i in bin_list[::-1]:
        if i == '1':
            break
        elif i == '0':
            bin_list.pop()
    result = len(bin_list)

    print(2**bin_num, result)
            
